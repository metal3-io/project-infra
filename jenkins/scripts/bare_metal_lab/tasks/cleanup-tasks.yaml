- name: Check required env vars are set
  fail:
    msg: Ensure that BML_ILO_USERNAME, BML_ILO_PASSWORD and GITHUB_TOKEN environment variables are set
  when: not bml_ilo_username or not bml_ilo_password or not github_token

- name: Install dependencies for metal3-dev-env and hpilo_boot
  apt:
    pkg:
      - make
      - python3-hpilo
  become: true

- name: Add passwordless sudo
  lineinfile:
    path: "/etc/sudoers.d/{{ ansible_user_id}}_passwordless_sudo"
    line: "{{ ansible_user_id }} ALL = (ALL) NOPASSWD: ALL"
    create: true
    owner: root
    group: root
    mode: 0400
  become: true

# Note: This file is persistent, so even though we do this *after* sending the
# variables it is still helpful for the next run.
- name: Ensure that iLO credentials and github token can be passed over SSH
  lineinfile:
    path: "/etc/ssh/sshd_config"
    line: "AcceptEnv LANG LC_* BML_* GITHUB_TOKEN REPO_NAME"
  become: true
  register: sshd_config

- name: Restart sshd if required
  systemd:
    name: sshd
    state: restarted
  become: true
  when: sshd_config.changed

- name: Shrink size of syslog
  become: true
  become_user: root
  shell:
    cmd: truncate --size 10737418240 /var/log/syslog && truncate --size 10737418240 /var/log/syslog.1   2>/dev/null
  ignore_errors: true

- name: Find old logs
  ansible.builtin.find:
    paths: /home/{{ ansible_user_id }}
    recurse: no
    patterns: "logs-jenkins-*"
    file_type: any
  register: old_logs

- name: Delete files and folders from previous run
  become: true
  become_user: root
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ old_logs.files | map(attribute='path') }}"
    - /home/{{ ansible_user_id }}/go
    - /opt/metal3-dev-env
    - /tmp/mariadb.csr
    - /tmp/ironic.csr
    - /tmp/manifests
    - "{{ serial_log_location }}"

- name: Delete folder containing metal3-dev-env
  become: true
  become_user: root
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - /home/{{ ansible_user_id }}/tested_repo
    - /home/{{ ansible_user_id }}/metal3
    - /home/{{ ansible_user_id }}/metal3-dev-env
  tags: clone

- name: Delete existing ssh connections to HPE CLI
  shell:
    cmd: |
      killall ssh
      exit 0
      EOT

- name: Power off BMHs
  community.general.hpilo_boot:
    host: "{{ item.ip }}"
    login: "{{ bml_ilo_username }}"
    password: "{{ bml_ilo_password }}"
    state: poweroff
  with_items: "{{ bare_metal_hosts }}"
  ignore_errors: true

- name: Clone the metal3-dev-env repo
  git:
    repo: "https://github.com/metal3-io/metal3-dev-env.git"
    dest: "/home/{{ ansible_user_id }}/{{ metal3_dir }}"
    version: "main"
  tags: clone

- name: Merge branch for PR
  command: "{{ item }}"
  args:
    chdir: "/home/{{ ansible_user_id }}/{{ metal3_dir }}"
  loop:
    - git config user.email "test@test.test"
    - git config user.name "Test"
    - git remote add test {{ metal3_dev_env_repo }}
    - git fetch test
    - git merge {{ metal3_dev_env_branch }}
  when: (metal3_dev_env_repo != "https://github.com/metal3-io/metal3-dev-env.git") or
            (metal3_dev_env_branch != "main")
  tags: clone

- name: Clean any existing setup
  shell:
    cmd: "make clean"
    chdir: "/home/{{ ansible_user_id }}/{{ metal3_dir }}/"

- name: Remove local container registry
  ansible.builtin.command: docker rm -f registry

- name: Prune docker containers, images and volumes
  ansible.builtin.command: "{{ item }}"
  loop:
    - docker container prune --force
    # Note: Without --all it just removes images that are not tagged
    - docker image prune --force --all
    - docker volume prune --force

- name: Reset network
  script: reset_network.sh
